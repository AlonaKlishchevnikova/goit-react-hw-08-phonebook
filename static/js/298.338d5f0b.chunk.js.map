{"version":3,"file":"static/js/298.338d5f0b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MyPhonebook/MyPhonebookForm/my-phonebook-form.module.css?7e46","modules/MyPhonebook/MyPhonebookForm/MyPhonebookForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/MyPhonebook/MyPhonebookFilter/my-phonebook-filter.module.css?d0ca","modules/MyPhonebook/MyPhonebookFilter/MyPhonebookFilter.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/modules/MyPhonebook/MyPhonebookList/my-phonebook-list.module.css?8650","modules/MyPhonebook/MyPhonebookList/MyPhonebookList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/contacts-page.css?07ac","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"my-phonebook-form_form__AVMeG\",\"label\":\"my-phonebook-form_label__cbxPG\",\"input\":\"my-phonebook-form_input__rbVhi\",\"btn\":\"my-phonebook-form_btn__+Kwt9\"};","\nimport { useState } from 'react';\nimport { fetchAddContact } from '../../../redux/contacts/contacts-operations';\n\n\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './my-phonebook-form.module.css';\nimport { nanoid } from 'nanoid';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(state => state.contacts.items);\n \n \n\n  const handleSubmit = event => {\n    event.preventDefault();\n        const verificationContact = contacts.find(\n      el => el.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (!verificationContact) {\n    \n      resetForm();\n      return  dispatch(fetchAddContact({ name, number, id: nanoid()}));\n\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  \n\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n\n  };\n\n  return (\n    <form className={styles.form } onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={event => setName(event.target.value)}\n        className={styles.input}\n      />\n      <label className={styles.label} htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={event => setNumber(event.target.value)}\n        className={styles.input}\n      />\n      <button className={styles.btn}  type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n","export const getFilter = store => store.filter;","// extracted by mini-css-extract-plugin\nexport default {\"wrraper\":\"my-phonebook-filter_wrraper__HfIoZ\",\"label\":\"my-phonebook-filter_label__fic9x\",\"filter\":\"my-phonebook-filter_filter__gE-gB\"};","\nimport React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport styles from './my-phonebook-filter.module.css'\n\nconst Filter = () => {\n  const onSetFilter = payload => {\n    dispatch(setFilter(payload));\n  };\n\n  const updateFilter = event => {\n    onSetFilter(event.target.value);\n  };\n\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  return (\n    <div className={styles.wrraper}>\n      <label className={styles.label}  htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={updateFilter}\n        value={filter}\n        className ={styles.filter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","\nimport { createSelector } from '@reduxjs/toolkit';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nexport const getContacts = store => store.contacts.items;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) => {\n      const normalizedName = name.toLowerCase();\n      return normalizedName.includes(normalizedFilter);\n    });\n  }\n);","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"my-phonebook-list_contactList__k0j2B\",\"btn\":\"my-phonebook-list_btn__lamhh\"};","\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchDeleteContact, fetchAllContacts } from 'redux/contacts/contacts-operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport styles from './my-phonebook-list.module.css'\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getFilteredContacts);\n\n  const onDeleteContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    \n    <ul className={styles.contactList }>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          <span>{contact.name}: </span>\n          <span>{contact.number}</span>\n          <button className={styles.btn }\n            type=\"button\"\n            onClick={() => onDeleteContact(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n      </ul>\n     \n  );\n};\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {};","import MyPhonebookForm from '../../modules/MyPhonebook/MyPhonebookForm/MyPhonebookForm';\nimport MyPhonebookFilter from '../../modules/MyPhonebook/MyPhonebookFilter/MyPhonebookFilter';\nimport MyPhonebookList from '../../modules/MyPhonebook/MyPhonebookList/MyPhonebookList';\nimport styles from './contacts-page.css';\n\nconst ContactsPage = () => {\n    return (\n        <div className={styles.wrapper}>\n             <MyPhonebookForm />\n      <MyPhonebookFilter />\n      <MyPhonebookList />\n        </div>\n    )\n\n}\nexport default ContactsPage;"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","contacts","useSelector","state","items","resetForm","className","styles","onSubmit","event","preventDefault","find","el","toLowerCase","fetchAddContact","id","nanoid","alert","htmlFor","type","pattern","title","required","value","onChange","target","getFilter","store","filter","payload","setFilter","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilteredContacts","normalizedFilter","includes","useEffect","fetchAllContacts","contact","onClick","fetchDeleteContact","MyPhonebookForm","MyPhonebookFilter","MyPhonebookList"],"sourceRoot":""}